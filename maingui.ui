<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>748</width>
    <height>417</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>HERESY v1.0.0</string>
  </property>
  <property name="windowIcon">
   <iconset resource="mainres.qrc">
    <normaloff>:/noprefix/heresy.png</normaloff>:/noprefix/heresy.png</iconset>
  </property>
  <property name="autoFillBackground">
   <bool>false</bool>
  </property>
  <property name="styleSheet">
   <string notr="true">QToolTip
{
     border: 1px solid black;
     background-color: #ffa02f;
     padding: 1px;
     border-radius: 3px;
     opacity: 100;
}

QWidget
{
    color: #b1b1b1;
    background-color: #323232;
}

QWidget:item:hover
{
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #ca0619);
    color: #000000;
}

QWidget:item:selected
{
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #d7801a);
}

QMenuBar::item
{
    background: transparent;
}

QMenuBar::item:selected
{
    background: transparent;
    border: 1px solid #ffaa00;
}

QMenuBar::item:pressed
{
    background: #444;
    border: 1px solid #000;
    background-color: QLinearGradient(
        x1:0, y1:0,
        x2:0, y2:1,
        stop:1 #212121,
        stop:0.4 #343434/*,
        stop:0.2 #343434,
        stop:0.1 #ffaa00*/
    );
    margin-bottom:-1px;
    padding-bottom:1px;
}

QMenu
{
    border: 1px solid #000;
}

QMenu::item
{
    padding: 2px 20px 2px 20px;
}

QMenu::item:selected
{
    color: #000000;
}

QWidget:disabled
{
    color: #404040;
    background-color: #323232;
}

QAbstractItemView
{
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #4d4d4d, stop: 0.1 #646464, stop: 1 #5d5d5d);
}

QWidget:focus
{
    /*border: 2px solid QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #d7801a);*/
}

QLineEdit
{
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #4d4d4d, stop: 0 #646464, stop: 1 #5d5d5d);
    padding: 1px;
    border-style: solid;
    border: 1px solid #1e1e1e;
    border-radius: 5;
}

QPushButton
{
    color: #b1b1b1;
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #F55, stop: 0.1 #555, stop: 0.5 #444, stop: 0.9 #444, stop: 1 #555);
    border-width: 1px;
    border-color: #1e1e1e;
    border-style: solid;
/*    border-radius: 6; */
    padding: 3px;
    font-size: 12px;
    padding-left: 5px;
    padding-right: 5px;
}

QPushButton:pressed
{
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #2d2d2d, stop: 0.1 #2b2b2b, stop: 0.5 #292929, stop: 0.9 #282828, stop: 1 #252525);
}

QComboBox
{
    selection-background-color: #ffaa00;
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #565656, stop: 0.1 #525252, stop: 0.5 #4e4e4e, stop: 0.9 #4a4a4a, stop: 1 #464646);
    border-style: solid;
    border: 1px solid #1e1e1e;
    border-radius: 5;
}

QComboBox:hover,QPushButton:hover
{
    border: 2px solid QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #d7801a);
}


QComboBox:on
{
    padding-top: 3px;
    padding-left: 4px;
    background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #2d2d2d, stop: 0.1 #2b2b2b, stop: 0.5 #292929, stop: 0.9 #282828, stop: 1 #252525);
    selection-background-color: #ffaa00;
}

QComboBox QAbstractItemView
{
    border: 2px solid darkgray;
    selection-background-color: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #d7801a);
}

QComboBox::drop-down
{
     subcontrol-origin: padding;
     subcontrol-position: top right;
     width: 15px;

     border-left-width: 0px;
     border-left-color: darkgray;
     border-left-style: solid; /* just a single line */
     border-top-right-radius: 3px; /* same radius as the QComboBox */
     border-bottom-right-radius: 3px;
 }

QComboBox::down-arrow
{
     image: url(:/down_arrow.png);
}

QGroupBox:focus
{
border: 2px solid QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #d7801a);
}

QTextEdit:focus
{
    border: 2px solid QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #d7801a);
}

QScrollBar:horizontal {
     border: 1px solid #222222;
     background: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0.0 #121212, stop: 0.2 #282828, stop: 1 #484848);
     height: 7px;
     margin: 0px 16px 0 16px;
}

QScrollBar::handle:horizontal
{
      background: QLinearGradient( x1: 0, y1: 0, x2: 1, y2: 0, stop: 0 #ffa02f, stop: 0.5 #d7801a, stop: 1 #ffa02f);
      min-height: 20px;
      border-radius: 2px;
}

QScrollBar::add-line:horizontal {
      border: 1px solid #1b1b19;
      border-radius: 2px;
      background: QLinearGradient( x1: 0, y1: 0, x2: 1, y2: 0, stop: 0 #ffa02f, stop: 1 #d7801a);
      width: 14px;
      subcontrol-position: right;
      subcontrol-origin: margin;
}

QScrollBar::sub-line:horizontal {
      border: 1px solid #1b1b19;
      border-radius: 2px;
      background: QLinearGradient( x1: 0, y1: 0, x2: 1, y2: 0, stop: 0 #ffa02f, stop: 1 #d7801a);
      width: 14px;
     subcontrol-position: left;
     subcontrol-origin: margin;
}

QScrollBar::right-arrow:horizontal, QScrollBar::left-arrow:horizontal
{
      border: 1px solid black;
      width: 1px;
      height: 1px;
      background: white;
}

QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal
{
      background: none;
}

QScrollBar:vertical
{
      background: QLinearGradient( x1: 0, y1: 0, x2: 1, y2: 0, stop: 0.0 #121212, stop: 0.2 #282828, stop: 1 #484848);
      width: 16px;
      margin: 16px 0 16px 0;
      border: 1px solid #222222;
}

QScrollBar::handle:vertical
{
      background: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 0.5 #d7801a, stop: 1 #ffa02f);
      min-height: 20px;
      border-radius: 2px;
}

QScrollBar::add-line:vertical
{
      border: 1px solid #1b1b19;
      border-radius: 2px;
      background: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #ffa02f, stop: 1 #d7801a);
      height: 14px;
      subcontrol-position: bottom;
      subcontrol-origin: margin;
}

QScrollBar::sub-line:vertical
{
      border: 1px solid #1b1b19;
      border-radius: 2px;
      background: QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #d7801a, stop: 1 #ffa02f);
      height: 14px;
      subcontrol-position: top;
      subcontrol-origin: margin;
}

QScrollBar::up-arrow:vertical, QScrollBar::down-arrow:vertical
{
      border: 1px solid black;
      width: 1px;
      height: 1px;
      background: white;
}


QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical
{
      background: none;
}

QTextEdit
{
    background-color: #242424;
}

QPlainTextEdit
{
    background-color: #242424;
}

QHeaderView::section
{
    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:0 #616161, stop: 0.5 #505050, stop: 0.6 #434343, stop:1 #656565);
    color: white;
    padding-left: 4px;
    border: 1px solid #6c6c6c;
}

QCheckBox:disabled
{
color: #414141;
}

QDockWidget::title
{
    text-align: center;
    spacing: 3px; /* spacing between items in the tool bar */
    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:0 #323232, stop: 0.5 #242424, stop:1 #323232);
}

QDockWidget::close-button, QDockWidget::float-button
{
    text-align: center;
    spacing: 1px; /* spacing between items in the tool bar */
    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:0 #323232, stop: 0.5 #242424, stop:1 #323232);
}

QDockWidget::close-button:hover, QDockWidget::float-button:hover
{
    background: #242424;
}

QDockWidget::close-button:pressed, QDockWidget::float-button:pressed
{
    padding: 1px -1px -1px 1px;
}

QMainWindow::separator
{
    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:0 #161616, stop: 0.5 #151515, stop: 0.6 #212121, stop:1 #343434);
    color: white;
    padding-left: 4px;
    border: 1px solid #4c4c4c;
    spacing: 3px; /* spacing between items in the tool bar */
}

QMainWindow::separator:hover
{

    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:0 #d7801a, stop:0.5 #b56c17 stop:1 #ffa02f);
    color: white;
    padding-left: 4px;
    border: 1px solid #6c6c6c;
    spacing: 3px; /* spacing between items in the tool bar */
}

QToolBar::handle
{
     spacing: 3px; /* spacing between items in the tool bar */
     background: url(:/images/handle.png);
}

QMenu::separator
{
    height: 2px;
    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:0 #161616, stop: 0.5 #151515, stop: 0.6 #212121, stop:1 #343434);
    color: white;
    padding-left: 4px;
    margin-left: 10px;
    margin-right: 5px;
}

QProgressBar
{
    border: 2px solid grey;
    border-radius: 5px;
    text-align: center;
}

QProgressBar::chunk
{
    background-color: #d7801a;
    width: 2.15px;
    margin: 0.5px;
}

QTabBar::tab {
    color: #b1b1b1;
    border: 1px solid #444;
    border-bottom-style: none;
    background-color: #323232;
    padding-left: 10px;
    padding-right: 10px;
    padding-top: 3px;
    padding-bottom: 2px;
    margin-right: -1px;
}

QTabWidget::pane {
    border: 1px solid #444;
    top: 1px;
}

QTabBar::tab:last
{
    margin-right: 0; /* the last selected tab has nothing to overlap with on the right */
    border-top-right-radius: 3px;
}

QTabBar::tab:first:!selected
{
 margin-left: 0px; /* the last selected tab has nothing to overlap with on the right */


    border-top-left-radius: 3px;
}

QTabBar::tab:!selected
{
    color: #b1b1b1;
    border-bottom-style: solid;
    margin-top: 3px;
    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:1 #212121, stop:.4 #343434);
}

QTabBar::tab:selected
{
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
    margin-bottom: 0px;
}

QTabBar::tab:!selected:hover
{
    /*border-top: 2px solid #ffaa00;
    padding-bottom: 3px;*/
    border-top-left-radius: 3px;
    border-top-right-radius: 3px;
    background-color: QLinearGradient(x1:0, y1:0, x2:0, y2:1, stop:1 #212121, stop:0.4 #343434, stop:0.2 #343434, stop:0.1 #ffaa00);
}

QRadioButton::indicator:checked, QRadioButton::indicator:unchecked{
    color: #b1b1b1;
    background-color: #323232;
    border: 1px solid #b1b1b1;
    border-radius: 6px;
}

QRadioButton::indicator:checked
{
    background-color: qradialgradient(
        cx: 0.5, cy: 0.5,
        fx: 0.5, fy: 0.5,
        radius: 1.0,
        stop: 0.25 #ffaa00,
        stop: 0.3 #323232
    );
}

QCheckBox::indicator{
    color: #b1b1b1;
    background-color: #323232;
    border: 1px solid #b1b1b1;
    width: 9px;
    height: 9px;
}

QRadioButton::indicator
{
    border-radius: 6px;
}

QRadioButton::indicator:hover, QCheckBox::indicator:hover
{
    border: 1px solid #ffaa00;
}

QCheckBox::indicator:checked
{
    image:url(:/images/checkbox.png);
}

QCheckBox::indicator:disabled, QRadioButton::indicator:disabled
{
    border: 1px solid #444;
}</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <layout class="QGridLayout" name="gridLayout_2">
    <item row="1" column="1">
     <widget class="QPlainTextEdit" name="context">
      <property name="toolTip">
       <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Contexts are described as a &lt;span style=&quot; font-weight:600;&quot;&gt;sequence of context sets&lt;/span&gt;.&lt;/p&gt;&lt;p&gt;Entities in each context are separated by spaces.&lt;/p&gt;&lt;p&gt;The contexts are separated by return carriages.&lt;/p&gt;&lt;p&gt;The empty context is represented by a full stop &amp;quot;.&amp;quot;&lt;/p&gt;&lt;p&gt;The number of simulation steps is equal to the number of contexts.&lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-style:italic;&quot;&gt;Example:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;a0&lt;br/&gt;.&lt;br/&gt;a1 a2&lt;/p&gt;&lt;p&gt;This context has length 3. The first set is {a0}, the second is empty, and the third is {a1, a2}.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
      <property name="plainText">
       <string/>
      </property>
     </widget>
    </item>
    <item row="0" column="1">
     <widget class="QPlainTextEdit" name="description">
      <property name="toolTip">
       <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Each &lt;span style=&quot; font-weight:600;&quot;&gt;reaction&lt;/span&gt; is composed of &lt;span style=&quot; font-weight:600;&quot;&gt;three sets&lt;/span&gt;: reactants, inhibitors and products. &lt;/p&gt;&lt;p&gt;All sets are separated by commas. &lt;/p&gt;&lt;p&gt;The entities within each set are separated by spaces. &lt;/p&gt;&lt;p&gt;All reactions are separated by return carriages. &lt;/p&gt;&lt;p&gt;&lt;span style=&quot; font-style:italic;&quot;&gt;Example: &lt;/span&gt;&lt;/p&gt;&lt;p&gt;a0 a2, a1, a3 &lt;/p&gt;&lt;p&gt;This reaction is composed of two reactants (a0 and a2), one inhibitor (a1) and a final product (a3). &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
      </property>
      <property name="plainText">
       <string/>
      </property>
     </widget>
    </item>
    <item row="3" column="0">
     <widget class="QLabel" name="label_3">
      <property name="text">
       <string>Result</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTop|Qt::AlignTrailing</set>
      </property>
     </widget>
    </item>
    <item row="0" column="0">
     <widget class="QLabel" name="label">
      <property name="text">
       <string>Reactions</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTop|Qt::AlignTrailing</set>
      </property>
     </widget>
    </item>
    <item row="3" column="1">
     <widget class="QTextEdit" name="result">
      <property name="styleSheet">
       <string notr="true"/>
      </property>
      <property name="acceptRichText">
       <bool>false</bool>
      </property>
     </widget>
    </item>
    <item row="2" column="1">
     <layout class="QHBoxLayout" name="horizontalLayout_3">
      <item>
       <widget class="QToolButton" name="flag_normalize">
        <property name="enabled">
         <bool>true</bool>
        </property>
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Expanding">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="styleSheet">
         <string notr="true"/>
        </property>
        <property name="text">
         <string>Normalize reaction system</string>
        </property>
        <property name="checkable">
         <bool>true</bool>
        </property>
        <property name="checked">
         <bool>false</bool>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCommandLinkButton" name="automatic">
        <property name="enabled">
         <bool>false</bool>
        </property>
        <property name="toolTip">
         <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Automatically perform the simulation of the reaction system using either the CPU or the GPU, using a heuristic on the number of reactions.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
        </property>
        <property name="text">
         <string>&amp;Simulate</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCommandLinkButton" name="button_simulate">
        <property name="enabled">
         <bool>false</bool>
        </property>
        <property name="toolTip">
         <string>Perform the simulation of the reaction system using the CPU.</string>
        </property>
        <property name="text">
         <string>Simulate with &amp;CPU</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCommandLinkButton" name="simwithgpu">
        <property name="enabled">
         <bool>false</bool>
        </property>
        <property name="toolTip">
         <string>Perform the simulation of the reaction system using the GPU (if available).</string>
        </property>
        <property name="text">
         <string>Simulate with &amp;GPU</string>
        </property>
       </widget>
      </item>
     </layout>
    </item>
    <item row="1" column="0">
     <widget class="QLabel" name="label_2">
      <property name="text">
       <string>Contexts</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTop|Qt::AlignTrailing</set>
      </property>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>748</width>
     <height>21</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true"/>
   </property>
   <widget class="QMenu" name="menu_File">
    <property name="title">
     <string>&amp;File</string>
    </property>
    <addaction name="action_Open_Reaction_System"/>
    <addaction name="action_Save_Reaction_System"/>
    <addaction name="actionS_ave_as"/>
    <addaction name="separator"/>
    <addaction name="action_Exit"/>
   </widget>
   <widget class="QMenu" name="menuOptions">
    <property name="title">
     <string>S&amp;ettings</string>
    </property>
    <addaction name="action_Preferences"/>
   </widget>
   <widget class="QMenu" name="menu_Help">
    <property name="title">
     <string>&amp;Help</string>
    </property>
    <addaction name="action_About_ORSI"/>
   </widget>
   <addaction name="menu_File"/>
   <addaction name="menuOptions"/>
   <addaction name="menu_Help"/>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
  <action name="action_Open_Reaction_System">
   <property name="text">
    <string>&amp;Open...</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+O</string>
   </property>
  </action>
  <action name="action_Save_Reaction_System">
   <property name="text">
    <string>&amp;Save</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+S</string>
   </property>
  </action>
  <action name="actionS_ave_as">
   <property name="text">
    <string>S&amp;ave as...</string>
   </property>
  </action>
  <action name="action_Exit">
   <property name="text">
    <string>&amp;Exit</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+X</string>
   </property>
  </action>
  <action name="action_Preferences">
   <property name="text">
    <string>&amp;Preferences...</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+P</string>
   </property>
   <property name="shortcutContext">
    <enum>Qt::ApplicationShortcut</enum>
   </property>
  </action>
  <action name="action_About_ORSI">
   <property name="text">
    <string>&amp;About HERESY...</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+H</string>
   </property>
  </action>
 </widget>
 <tabstops>
  <tabstop>description</tabstop>
  <tabstop>context</tabstop>
  <tabstop>flag_normalize</tabstop>
  <tabstop>automatic</tabstop>
  <tabstop>button_simulate</tabstop>
  <tabstop>simwithgpu</tabstop>
  <tabstop>result</tabstop>
 </tabstops>
 <resources>
  <include location="mainres.qrc"/>
 </resources>
 <connections>
  <connection>
   <sender>action_Preferences</sender>
   <signal>triggered()</signal>
   <receiver>MainWindow</receiver>
   <slot>open_preferences()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>301</x>
     <y>208</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>context</sender>
   <signal>textChanged()</signal>
   <receiver>MainWindow</receiver>
   <slot>try_unlock()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>331</x>
     <y>194</y>
    </hint>
    <hint type="destinationlabel">
     <x>301</x>
     <y>208</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>description</sender>
   <signal>textChanged()</signal>
   <receiver>MainWindow</receiver>
   <slot>try_unlock()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>331</x>
     <y>82</y>
    </hint>
    <hint type="destinationlabel">
     <x>301</x>
     <y>208</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>action_Exit</sender>
   <signal>triggered()</signal>
   <receiver>MainWindow</receiver>
   <slot>close()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>301</x>
     <y>208</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>action_About_ORSI</sender>
   <signal>triggered()</signal>
   <receiver>MainWindow</receiver>
   <slot>show_about()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>301</x>
     <y>208</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>description</sender>
   <signal>textChanged()</signal>
   <receiver>MainWindow</receiver>
   <slot>updated_reactions()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>328</x>
     <y>82</y>
    </hint>
    <hint type="destinationlabel">
     <x>301</x>
     <y>208</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>context</sender>
   <signal>textChanged()</signal>
   <receiver>MainWindow</receiver>
   <slot>updated_contexts()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>328</x>
     <y>193</y>
    </hint>
    <hint type="destinationlabel">
     <x>301</x>
     <y>208</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>automatic</sender>
   <signal>clicked()</signal>
   <receiver>MainWindow</receiver>
   <slot>start_simulation_auto()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>261</x>
     <y>261</y>
    </hint>
    <hint type="destinationlabel">
     <x>301</x>
     <y>208</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>simwithgpu</sender>
   <signal>clicked()</signal>
   <receiver>MainWindow</receiver>
   <slot>start_simulation_gpu()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>529</x>
     <y>261</y>
    </hint>
    <hint type="destinationlabel">
     <x>301</x>
     <y>208</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>button_simulate</sender>
   <signal>clicked()</signal>
   <receiver>MainWindow</receiver>
   <slot>start_simulation()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>395</x>
     <y>261</y>
    </hint>
    <hint type="destinationlabel">
     <x>301</x>
     <y>208</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>actionS_ave_as</sender>
   <signal>triggered()</signal>
   <receiver>MainWindow</receiver>
   <slot>saveas()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>373</x>
     <y>208</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>action_Save_Reaction_System</sender>
   <signal>triggered()</signal>
   <receiver>MainWindow</receiver>
   <slot>save()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>373</x>
     <y>208</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>action_Open_Reaction_System</sender>
   <signal>triggered()</signal>
   <receiver>MainWindow</receiver>
   <slot>openfile()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>-1</x>
     <y>-1</y>
    </hint>
    <hint type="destinationlabel">
     <x>373</x>
     <y>208</y>
    </hint>
   </hints>
  </connection>
 </connections>
 <slots>
  <slot>start_simulation()</slot>
  <slot>try_unlock()</slot>
  <slot>start_simulation_gpu()</slot>
  <slot>start_simulation_auto()</slot>
  <slot>open_preferences()</slot>
  <slot>show_about()</slot>
  <slot>updated_reactions()</slot>
  <slot>updated_contexts()</slot>
  <slot>saveas()</slot>
  <slot>save()</slot>
  <slot>openfile()</slot>
 </slots>
</ui>
